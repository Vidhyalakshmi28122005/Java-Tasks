 1. Divide by Zero

public class DivideByZero {
    public static void main(String[] args) {
        try {
            int x = 15;
            int y = 0;
            int res = x / y;
            System.out.println("Answer: " + res);
        } catch (ArithmeticException ex) {
            System.out.println("Exception: " + ex.getMessage());
        }
    }
}


2. Reading a File

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class ReadFile {
    public static void main(String[] args) {
        try (BufferedReader reader = new BufferedReader(new FileReader("input.txt"))) {
            String data;
            while ((data = reader.readLine()) != null) {
                System.out.println(data);
            }
        } catch (IOException ex) {
            System.out.println("File Read Error: " + ex.getMessage());
        }
    }
}


3. Writing to a File

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class WriteFile {
    public static void main(String[] args) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("output.txt"))) {
            writer.write("This is line one.");
            writer.newLine();
            writer.write("This is line two.");
            writer.newLine();
            writer.write("This is line three.");
        } catch (IOException ex) {
            System.out.println("Write Error: " + ex.getMessage());
        }
    }
}


 4. Result Processing

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class ResultProcessing {
    public static void main(String[] args) {
        try (BufferedReader reader = new BufferedReader(new FileReader("marks.txt"));
             BufferedWriter writer = new BufferedWriter(new FileWriter("result.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                String student = data[0];
                int score = Integer.parseInt(data[1]);
                String status = score >= 50 ? "Pass" : "Fail";
                writer.write(student + " - " + status);
                writer.newLine();
            }
        } catch (IOException ex) {
            System.out.println("Processing Error: " + ex.getMessage());
        }
    }
}


 5. Employee Record System

import java.util.Scanner;

class Employee {
    String name;
    int empId;
    double salary;

    void set(String n, int id, double s) {
        name = n;
        empId = id;
        salary = s;
    }

    void show() {
        System.out.println("Emp ID: " + empId);
        System.out.println("Emp Name: " + name);
        System.out.println("Salary: " + salary);
    }
}

public class EmployeeSystem {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Employee[] list = new Employee[3];

        for (int i = 0; i < list.length; i++) {
            list[i] = new Employee();
            System.out.print("ID: ");
            int id = sc.nextInt();
            sc.nextLine();
            System.out.print("Name: ");
            String name = sc.nextLine();
            System.out.print("Salary: ");
            double sal = sc.nextDouble();
            list[i].set(name, id, sal);
        }

        System.out.println("\nAll Employee Details:");
        for (Employee e : list) {
            e.show();
            System.out.println();
        }
    }
}
